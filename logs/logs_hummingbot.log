2022-03-10 18:04:48,342 - 2376 - hummingbot.core.utils.trading_pair_fetcher - ERROR - Connector k2 failed to retrieve its trading pairs. Trading pairs autocompletion won't work.
Traceback (most recent call last):
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 969, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)  # type: ignore  # noqa
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\base_events.py", line 1050, in create_connection
    transport, protocol = await self._create_connection_transport(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\base_events.py", line 1080, in _create_connection_transport
    await waiter
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\sslproto.py", line 529, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\sslproto.py", line 189, in feed_ssldata
    self._sslobj.do_handshake()
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\ssl.py", line 944, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\k2\k2_api_order_book_data_source.py", line 62, in fetch_trading_pairs
    async with client.get(f"{constants.REST_URL}{constants.GET_TRADING_PAIRS}", timeout=10) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 520, in _request
    conn = await self._connector.connect(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 535, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 892, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 1051, in _create_direct_connection
    raise last_exc
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 1020, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 971, in _wrap_create_connection
    raise ClientConnectorCertificateError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api-q2.fourwordsalluppercase.com:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)')]
2022-03-10 18:07:38,315 - 2376 - hummingbot.core.utils.async_utils - ERROR - Unhandled error in background task: 
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\async_utils.py", line 9, in safe_wrapper
    return await c
  File "C:\Users\Ed\humming-bot\hummingbot\client\command\balance_command.py", line 92, in show_balances
    all_ex_bals = await asyncio.wait_for(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\tasks.py", line 490, in wait_for
    raise exceptions.TimeoutError()
asyncio.exceptions.TimeoutError
2022-03-10 18:12:50,304 - 2376 - hummingbot.core.utils.async_utils - ERROR - Unhandled error in background task: 
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\async_utils.py", line 9, in safe_wrapper
    return await c
  File "C:\Users\Ed\humming-bot\hummingbot\client\command\balance_command.py", line 92, in show_balances
    all_ex_bals = await asyncio.wait_for(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\tasks.py", line 490, in wait_for
    raise exceptions.TimeoutError()
asyncio.exceptions.TimeoutError
2022-03-10 18:15:03,348 - 14396 - hummingbot.core.utils.trading_pair_fetcher - ERROR - Connector k2 failed to retrieve its trading pairs. Trading pairs autocompletion won't work.
Traceback (most recent call last):
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 969, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)  # type: ignore  # noqa
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\base_events.py", line 1050, in create_connection
    transport, protocol = await self._create_connection_transport(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\base_events.py", line 1080, in _create_connection_transport
    await waiter
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\sslproto.py", line 529, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\sslproto.py", line 189, in feed_ssldata
    self._sslobj.do_handshake()
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\ssl.py", line 944, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\k2\k2_api_order_book_data_source.py", line 62, in fetch_trading_pairs
    async with client.get(f"{constants.REST_URL}{constants.GET_TRADING_PAIRS}", timeout=10) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 520, in _request
    conn = await self._connector.connect(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 535, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 892, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 1051, in _create_direct_connection
    raise last_exc
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 1020, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 971, in _wrap_create_connection
    raise ClientConnectorCertificateError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api-q2.fourwordsalluppercase.com:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)')]
2022-03-10 19:21:17,819 - 10612 - hummingbot.core.utils.trading_pair_fetcher - ERROR - Connector kucoin failed to retrieve its trading pairs. Trading pairs autocompletion won't work.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\kucoin\kucoin_api_order_book_data_source.py", line 341, in fetch_trading_pairs
    async with client.get(url, timeout=5) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 619, in _request
    break
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\helpers.py", line 656, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError
2022-03-10 19:21:19,100 - 10612 - hummingbot.core.utils.trading_pair_fetcher - ERROR - Connector digifinex failed to retrieve its trading pairs. Trading pairs autocompletion won't work.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\digifinex\digifinex_api_order_book_data_source.py", line 57, in fetch_trading_pairs
    async with client.get(f"{constants.REST_URL}/ticker", timeout=10) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 619, in _request
    break
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\helpers.py", line 656, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError
2022-03-10 19:21:19,103 - 10612 - hummingbot.core.utils.trading_pair_fetcher - ERROR - Connector crypto_com failed to retrieve its trading pairs. Trading pairs autocompletion won't work.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\crypto_com\crypto_com_api_order_book_data_source.py", line 85, in fetch_trading_pairs
    async with client.get(url=url, timeout=10) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 619, in _request
    break
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\helpers.py", line 656, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError
2022-03-10 19:21:19,105 - 10612 - hummingbot.core.utils.trading_pair_fetcher - ERROR - Connector k2 failed to retrieve its trading pairs. Trading pairs autocompletion won't work.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\k2\k2_api_order_book_data_source.py", line 62, in fetch_trading_pairs
    async with client.get(f"{constants.REST_URL}{constants.GET_TRADING_PAIRS}", timeout=10) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 619, in _request
    break
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\helpers.py", line 656, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError
2022-03-10 19:21:21,105 - 10612 - hummingbot.connector.derivative.binance_perpetual.binance_perpetual_api_order_book_data_source - ERROR - There was an error requesting exchange info ()
2022-03-10 19:21:21,106 - 10612 - hummingbot.logger.reporting_proxy_handler - ERROR - Error sending logs.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\connector\derivative\binance_perpetual\binance_perpetual_api_order_book_data_source.py", line 160, in init_trading_pair_symbols
    response = await rest_assistant.call(request=request, timeout=10)
  File "C:\Users\Ed\humming-bot\hummingbot\core\web_assistant\rest_assistant.py", line 35, in call
    resp = await wait_for(self._connection.call(request), timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\tasks.py", line 490, in wait_for
    raise exceptions.TimeoutError()
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 157, in flush
    self.send_logs(self._log_queue)
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 116, in send_logs
    if not self._enable_order_event_logging:
AttributeError: 'ReportingProxyHandler' object has no attribute '_enable_order_event_logging'
2022-03-10 19:21:22,473 - 10612 - hummingbot.core.utils.trading_pair_fetcher - ERROR - Connector bitmart failed to retrieve its trading pairs. Trading pairs autocompletion won't work.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\bitmart\bitmart_api_order_book_data_source.py", line 89, in fetch_trading_pairs
    response = await rest_assistant.call(request=request, timeout=10)
  File "C:\Users\Ed\humming-bot\hummingbot\core\web_assistant\rest_assistant.py", line 35, in call
    resp = await wait_for(self._connection.call(request), timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\tasks.py", line 490, in wait_for
    raise exceptions.TimeoutError()
asyncio.exceptions.TimeoutError
2022-03-10 19:21:22,477 - 10612 - hummingbot.logger.reporting_proxy_handler - ERROR - Error sending logs.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\bitmart\bitmart_api_order_book_data_source.py", line 89, in fetch_trading_pairs
    response = await rest_assistant.call(request=request, timeout=10)
  File "C:\Users\Ed\humming-bot\hummingbot\core\web_assistant\rest_assistant.py", line 35, in call
    resp = await wait_for(self._connection.call(request), timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\tasks.py", line 490, in wait_for
    raise exceptions.TimeoutError()
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 157, in flush
    self.send_logs(self._log_queue)
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 116, in send_logs
    if not self._enable_order_event_logging:
AttributeError: 'ReportingProxyHandler' object has no attribute '_enable_order_event_logging'
2022-03-10 19:21:25,375 - 10612 - root - INFO - Error fetching data from https://api.gateio.ws/api/v4/spot/currency_pairs. HTTP status is None. Retrying in 4s.
2022-03-10 19:21:25,663 - 10612 - hummingbot.core.utils.trading_pair_fetcher - ERROR - Connector kucoin_paper_trade failed to retrieve its trading pairs. Trading pairs autocompletion won't work.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\kucoin\kucoin_api_order_book_data_source.py", line 341, in fetch_trading_pairs
    async with client.get(url, timeout=5) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 619, in _request
    break
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\helpers.py", line 656, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError
2022-03-10 19:21:25,669 - 10612 - hummingbot.logger.reporting_proxy_handler - ERROR - Error sending logs.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\kucoin\kucoin_api_order_book_data_source.py", line 341, in fetch_trading_pairs
    async with client.get(url, timeout=5) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 619, in _request
    break
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\helpers.py", line 656, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 157, in flush
    self.send_logs(self._log_queue)
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 116, in send_logs
    if not self._enable_order_event_logging:
AttributeError: 'ReportingProxyHandler' object has no attribute '_enable_order_event_logging'
2022-03-10 19:21:27,498 - 10612 - hummingbot.core.utils.trading_pair_fetcher - ERROR - Connector wazirx failed to retrieve its trading pairs. Trading pairs autocompletion won't work.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\wazirx\wazirx_api_order_book_data_source.py", line 82, in fetch_trading_pairs
    async with client.get(f"{CONSTANTS.WAZIRX_API_BASE}/{CONSTANTS.GET_EXCHANGE_INFO}", timeout=10) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 619, in _request
    break
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\helpers.py", line 656, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError
2022-03-10 19:21:27,501 - 10612 - hummingbot.logger.reporting_proxy_handler - ERROR - Error sending logs.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\wazirx\wazirx_api_order_book_data_source.py", line 82, in fetch_trading_pairs
    async with client.get(f"{CONSTANTS.WAZIRX_API_BASE}/{CONSTANTS.GET_EXCHANGE_INFO}", timeout=10) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 619, in _request
    break
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\helpers.py", line 656, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 157, in flush
    self.send_logs(self._log_queue)
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 116, in send_logs
    if not self._enable_order_event_logging:
AttributeError: 'ReportingProxyHandler' object has no attribute '_enable_order_event_logging'
2022-03-10 19:21:27,679 - 10612 - root - INFO - Error fetching data from https://api.gateio.ws/api/v4/spot/currency_pairs. HTTP status is None. Retrying in 4s.
2022-03-10 19:30:05,709 - 10612 - hummingbot.connector.derivative.binance_perpetual.binance_perpetual_api_order_book_data_source - ERROR - There was an error requesting exchange info ()
2022-03-10 19:30:05,710 - 10612 - hummingbot.logger.reporting_proxy_handler - ERROR - Error sending logs.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\connector\derivative\binance_perpetual\binance_perpetual_api_order_book_data_source.py", line 160, in init_trading_pair_symbols
    response = await rest_assistant.call(request=request, timeout=10)
  File "C:\Users\Ed\humming-bot\hummingbot\core\web_assistant\rest_assistant.py", line 35, in call
    resp = await wait_for(self._connection.call(request), timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\tasks.py", line 483, in wait_for
    return fut.result()
  File "C:\Users\Ed\humming-bot\hummingbot\core\web_assistant\connections\rest_connection.py", line 10, in call
    aiohttp_resp = await self._client_session.request(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 619, in _request
    break
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\helpers.py", line 656, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 157, in flush
    self.send_logs(self._log_queue)
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 116, in send_logs
    if not self._enable_order_event_logging:
AttributeError: 'ReportingProxyHandler' object has no attribute '_enable_order_event_logging'
2022-03-10 19:30:05,717 - 10612 - hummingbot.connector.exchange.latoken.latoken_api_order_book_data_source - ERROR - There was an error requesting /ticker ()
2022-03-10 19:30:05,717 - 10612 - hummingbot.logger.reporting_proxy_handler - ERROR - Error sending logs.
Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\latoken\latoken_api_order_book_data_source.py", line 499, in _get_data
    data.extend(await response.json())
  File "C:\Users\Ed\humming-bot\hummingbot\core\web_assistant\connections\data_types.py", line 110, in json
    json_ = await self._aiohttp_response.json()
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client_reqrep.py", line 1092, in json
    await self.read()
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client_reqrep.py", line 1032, in read
    self._body = await self.content.read()
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\streams.py", line 370, in read
    block = await self.readany()
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\streams.py", line 392, in readany
    await self._wait("readany")
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\streams.py", line 306, in _wait
    await waiter
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\helpers.py", line 656, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 157, in flush
    self.send_logs(self._log_queue)
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 116, in send_logs
    if not self._enable_order_event_logging:
AttributeError: 'ReportingProxyHandler' object has no attribute '_enable_order_event_logging'
2022-03-10 19:30:05,840 - 10612 - hummingbot.connector.exchange.altmarkets.altmarkets_api_order_book_data_source - NETWORK - Error fetching data from https://v2.altmarkets.io/api/v2/peatio/public/markets. HTTP status is None. Retrying in 7s. 
2022-03-10 19:30:05,961 - 10612 - root - INFO - Error fetching data from https://api.gateio.ws/api/v4/spot/currency_pairs. HTTP status is None. Retrying in 7s.
2022-03-10 19:30:06,389 - 10612 - hummingbot.client.ui.hummingbot_cli - ERROR - Unhandled error in prompt_toolkit: [WinError 10038] An operation was attempted on something that is not a socket
Traceback (most recent call last):
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\proactor_events.py", line 162, in _call_connection_lost
    self._sock.shutdown(socket.SHUT_RDWR)
OSError: [WinError 10038] An operation was attempted on something that is not a socket
2022-03-10 19:30:06,395 - 10612 - hummingbot.logger.reporting_proxy_handler - ERROR - Error sending logs.
Traceback (most recent call last):
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\proactor_events.py", line 162, in _call_connection_lost
    self._sock.shutdown(socket.SHUT_RDWR)
OSError: [WinError 10038] An operation was attempted on something that is not a socket

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 157, in flush
    self.send_logs(self._log_queue)
  File "C:\Users\Ed\humming-bot\hummingbot\logger\reporting_proxy_handler.py", line 116, in send_logs
    if not self._enable_order_event_logging:
AttributeError: 'ReportingProxyHandler' object has no attribute '_enable_order_event_logging'
2022-03-10 19:30:42,239 - 8988 - hummingbot.core.utils.trading_pair_fetcher - ERROR - Connector k2 failed to retrieve its trading pairs. Trading pairs autocompletion won't work.
Traceback (most recent call last):
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 969, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)  # type: ignore  # noqa
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\base_events.py", line 1050, in create_connection
    transport, protocol = await self._create_connection_transport(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\base_events.py", line 1080, in _create_connection_transport
    await waiter
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\sslproto.py", line 529, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\sslproto.py", line 189, in feed_ssldata
    self._sslobj.do_handshake()
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\ssl.py", line 944, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\k2\k2_api_order_book_data_source.py", line 62, in fetch_trading_pairs
    async with client.get(f"{constants.REST_URL}{constants.GET_TRADING_PAIRS}", timeout=10) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 520, in _request
    conn = await self._connector.connect(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 535, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 892, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 1051, in _create_direct_connection
    raise last_exc
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 1020, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 971, in _wrap_create_connection
    raise ClientConnectorCertificateError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api-q2.fourwordsalluppercase.com:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)')]
2022-03-10 19:51:45,976 - 3856 - hummingbot.core.utils.trading_pair_fetcher - ERROR - Connector k2 failed to retrieve its trading pairs. Trading pairs autocompletion won't work.
Traceback (most recent call last):
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 969, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)  # type: ignore  # noqa
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\base_events.py", line 1050, in create_connection
    transport, protocol = await self._create_connection_transport(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\base_events.py", line 1080, in _create_connection_transport
    await waiter
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\sslproto.py", line 529, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\asyncio\sslproto.py", line 189, in feed_ssldata
    self._sslobj.do_handshake()
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\ssl.py", line 944, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Ed\humming-bot\hummingbot\core\utils\trading_pair_fetcher.py", line 64, in call_fetch_pairs
    self.trading_pairs[exchange_name] = await fetch_fn
  File "C:\Users\Ed\humming-bot\hummingbot\connector\exchange\k2\k2_api_order_book_data_source.py", line 62, in fetch_trading_pairs
    async with client.get(f"{constants.REST_URL}{constants.GET_TRADING_PAIRS}", timeout=10) as response:
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 1117, in __aenter__
    self._resp = await self._coro
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\client.py", line 520, in _request
    conn = await self._connector.connect(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 535, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 892, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 1051, in _create_direct_connection
    raise last_exc
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 1020, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
  File "C:\Users\Ed\miniconda3\envs\hummingbot\lib\site-packages\aiohttp\connector.py", line 971, in _wrap_create_connection
    raise ClientConnectorCertificateError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api-q2.fourwordsalluppercase.com:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)')]
